import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from scipy.stats import ttest_ind, chi2_contingency

# CSVファイルのパスを指定
csv_file = 'potential_test_results.csv'  # サーバー上のCSVファイルへのパスを指定

# CSVファイルの読み込み
data = pd.read_csv(csv_file)

# データの確認
print(data.head())
print(data['LayoutType'].unique())

# データのクリーニング
data['ResponseTime(ms)'] = pd.to_numeric(data['ResponseTime(ms)'], errors='coerce')
data = data.dropna(subset=['ResponseTime(ms)'])

# レイアウトタイプごとのデータ分割
repeated_data = data[data['LayoutType'] == 'repeated']
random_data = data[data['LayoutType'] == 'random']

# 統計量の計算
stats = data.groupby('LayoutType').agg(
    mean_reaction_time=('ResponseTime(ms)', 'mean'),
    median_reaction_time=('ResponseTime(ms)', 'median'),
    std_reaction_time=('ResponseTime(ms)', 'std'),
    correct_rate=('Result', lambda x: (x == 'Correct').mean() * 100)
).reset_index()

print(stats)

# 統計量をCSVに保存
stats.to_csv('experiment_statistics.csv', index=False)

# 反応時間の散布図作成
plt.figure(figsize=(12, 6))
sns.scatterplot(data=data, x='TrialNumber', y='ResponseTime(ms)', hue='LayoutType', alpha=0.6)
plt.title('Reaction Time by Trial and Layout Type')
plt.xlabel('Trial Number')
plt.ylabel('Reaction Time (ms)')
plt.legend(title='Layout Type')
plt.tight_layout()
plt.savefig('reaction_time_scatter.png')
plt.show()

# 反応時間のボックスプロット
plt.figure(figsize=(8, 6))
sns.boxplot(data=data, x='LayoutType', y='ResponseTime(ms)')
plt.title('Reaction Time Distribution by Layout Type')
plt.xlabel('Layout Type')
plt.ylabel('Reaction Time (ms)')
plt.tight_layout()
plt.savefig('reaction_time_boxplot.png')
plt.show()

# 正答率の棒グラフ
plt.figure(figsize=(8, 6))
sns.barplot(data=stats, x='LayoutType', y='correct_rate', palette='viridis')
plt.title('Correct Rate by Layout Type')
plt.xlabel('Layout Type')
plt.ylabel('Correct Rate (%)')
plt.ylim(0, 100)
for index, row in stats.iterrows():
    plt.text(index, row.correct_rate + 1, f"{row.correct_rate:.1f}%", ha='center')
plt.tight_layout()
plt.savefig('correct_rate_barplot.png')
plt.show()

# 反応時間の統計解析：T検定
t_stat, p_val = ttest_ind(repeated_data['ResponseTime(ms)'], random_data['ResponseTime(ms)'], equal_var=False)
print(f"T-test for Reaction Time between Repeated and Random Layouts:\nT-statistic: {t_stat:.3f}, p-value: {p_val:.3f}")

# 正答率の統計解析：カイ二乗検定
contingency_table = pd.crosstab(data['LayoutType'], data['Result'])
print(contingency_table)

chi2, chi2_p, dof, ex = chi2_contingency(contingency_table)
print(f"Chi-square Test for Correct Rates between Repeated and Random Layouts:\nChi2 Statistic: {chi2:.3f}, p-value: {chi2_p:.3f}")
